// Code generated by protoc-gen-go. DO NOT EDIT.
// source: authsvc.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{0}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Auth                 string   `protobuf:"bytes,2,opt,name=Auth,json=auth,proto3" json:"Auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReply) Reset()         { *m = LoginReply{} }
func (m *LoginReply) String() string { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()    {}
func (*LoginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{1}
}
func (m *LoginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReply.Unmarshal(m, b)
}
func (m *LoginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReply.Marshal(b, m, deterministic)
}
func (dst *LoginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReply.Merge(dst, src)
}
func (m *LoginReply) XXX_Size() int {
	return xxx_messageInfo_LoginReply.Size(m)
}
func (m *LoginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReply.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReply proto.InternalMessageInfo

func (m *LoginReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *LoginReply) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

type NewUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserRequest) Reset()         { *m = NewUserRequest{} }
func (m *NewUserRequest) String() string { return proto.CompactTextString(m) }
func (*NewUserRequest) ProtoMessage()    {}
func (*NewUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{2}
}
func (m *NewUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserRequest.Unmarshal(m, b)
}
func (m *NewUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserRequest.Marshal(b, m, deterministic)
}
func (dst *NewUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserRequest.Merge(dst, src)
}
func (m *NewUserRequest) XXX_Size() int {
	return xxx_messageInfo_NewUserRequest.Size(m)
}
func (m *NewUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserRequest proto.InternalMessageInfo

func (m *NewUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *NewUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *NewUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NewUserReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Auth                 string   `protobuf:"bytes,2,opt,name=Auth,json=auth,proto3" json:"Auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewUserReply) Reset()         { *m = NewUserReply{} }
func (m *NewUserReply) String() string { return proto.CompactTextString(m) }
func (*NewUserReply) ProtoMessage()    {}
func (*NewUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{3}
}
func (m *NewUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewUserReply.Unmarshal(m, b)
}
func (m *NewUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewUserReply.Marshal(b, m, deterministic)
}
func (dst *NewUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewUserReply.Merge(dst, src)
}
func (m *NewUserReply) XXX_Size() int {
	return xxx_messageInfo_NewUserReply.Size(m)
}
func (m *NewUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewUserReply proto.InternalMessageInfo

func (m *NewUserReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *NewUserReply) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

type DecryptRequest struct {
	Crypto               string   `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptRequest) Reset()         { *m = DecryptRequest{} }
func (m *DecryptRequest) String() string { return proto.CompactTextString(m) }
func (*DecryptRequest) ProtoMessage()    {}
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{4}
}
func (m *DecryptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptRequest.Unmarshal(m, b)
}
func (m *DecryptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptRequest.Marshal(b, m, deterministic)
}
func (dst *DecryptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptRequest.Merge(dst, src)
}
func (m *DecryptRequest) XXX_Size() int {
	return xxx_messageInfo_DecryptRequest.Size(m)
}
func (m *DecryptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptRequest proto.InternalMessageInfo

func (m *DecryptRequest) GetCrypto() string {
	if m != nil {
		return m.Crypto
	}
	return ""
}

type DecryptReply struct {
	Secret               string   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecryptReply) Reset()         { *m = DecryptReply{} }
func (m *DecryptReply) String() string { return proto.CompactTextString(m) }
func (*DecryptReply) ProtoMessage()    {}
func (*DecryptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{5}
}
func (m *DecryptReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecryptReply.Unmarshal(m, b)
}
func (m *DecryptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecryptReply.Marshal(b, m, deterministic)
}
func (dst *DecryptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecryptReply.Merge(dst, src)
}
func (m *DecryptReply) XXX_Size() int {
	return xxx_messageInfo_DecryptReply.Size(m)
}
func (m *DecryptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DecryptReply.DiscardUnknown(m)
}

var xxx_messageInfo_DecryptReply proto.InternalMessageInfo

func (m *DecryptReply) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *DecryptReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ValidateRequest struct {
	Crypto               string   `protobuf:"bytes,1,opt,name=crypto,proto3" json:"crypto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRequest) Reset()         { *m = ValidateRequest{} }
func (m *ValidateRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRequest) ProtoMessage()    {}
func (*ValidateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{6}
}
func (m *ValidateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRequest.Unmarshal(m, b)
}
func (m *ValidateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRequest.Marshal(b, m, deterministic)
}
func (dst *ValidateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRequest.Merge(dst, src)
}
func (m *ValidateRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRequest.Size(m)
}
func (m *ValidateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRequest proto.InternalMessageInfo

func (m *ValidateRequest) GetCrypto() string {
	if m != nil {
		return m.Crypto
	}
	return ""
}

type ValidateReply struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateReply) Reset()         { *m = ValidateReply{} }
func (m *ValidateReply) String() string { return proto.CompactTextString(m) }
func (*ValidateReply) ProtoMessage()    {}
func (*ValidateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{7}
}
func (m *ValidateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateReply.Unmarshal(m, b)
}
func (m *ValidateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateReply.Marshal(b, m, deterministic)
}
func (dst *ValidateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateReply.Merge(dst, src)
}
func (m *ValidateReply) XXX_Size() int {
	return xxx_messageInfo_ValidateReply.Size(m)
}
func (m *ValidateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateReply.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateReply proto.InternalMessageInfo

func (m *ValidateReply) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ValidateReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type JWTPayloadType struct {
	UserID               int64    `protobuf:"varint,1,opt,name=UserID,json=userID,proto3" json:"UserID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWTPayloadType) Reset()         { *m = JWTPayloadType{} }
func (m *JWTPayloadType) String() string { return proto.CompactTextString(m) }
func (*JWTPayloadType) ProtoMessage()    {}
func (*JWTPayloadType) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{8}
}
func (m *JWTPayloadType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTPayloadType.Unmarshal(m, b)
}
func (m *JWTPayloadType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTPayloadType.Marshal(b, m, deterministic)
}
func (dst *JWTPayloadType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTPayloadType.Merge(dst, src)
}
func (m *JWTPayloadType) XXX_Size() int {
	return xxx_messageInfo_JWTPayloadType.Size(m)
}
func (m *JWTPayloadType) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTPayloadType.DiscardUnknown(m)
}

var xxx_messageInfo_JWTPayloadType proto.InternalMessageInfo

func (m *JWTPayloadType) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type SubscribeRequest struct {
	Token                string          `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	JWTPayload           *JWTPayloadType `protobuf:"bytes,2,opt,name=JWTPayload,json=jWTPayload,proto3" json:"JWTPayload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{9}
}
func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(dst, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SubscribeRequest) GetJWTPayload() *JWTPayloadType {
	if m != nil {
		return m.JWTPayload
	}
	return nil
}

type SubscribeReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeReply) Reset()         { *m = SubscribeReply{} }
func (m *SubscribeReply) String() string { return proto.CompactTextString(m) }
func (*SubscribeReply) ProtoMessage()    {}
func (*SubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{10}
}
func (m *SubscribeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReply.Unmarshal(m, b)
}
func (m *SubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReply.Marshal(b, m, deterministic)
}
func (dst *SubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReply.Merge(dst, src)
}
func (m *SubscribeReply) XXX_Size() int {
	return xxx_messageInfo_SubscribeReply.Size(m)
}
func (m *SubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReply proto.InternalMessageInfo

func (m *SubscribeReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type UnSubscribeRequest struct {
	JWTPayload           *JWTPayloadType `protobuf:"bytes,1,opt,name=JWTPayload,json=jWTPayload,proto3" json:"JWTPayload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UnSubscribeRequest) Reset()         { *m = UnSubscribeRequest{} }
func (m *UnSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*UnSubscribeRequest) ProtoMessage()    {}
func (*UnSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{11}
}
func (m *UnSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnSubscribeRequest.Unmarshal(m, b)
}
func (m *UnSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnSubscribeRequest.Marshal(b, m, deterministic)
}
func (dst *UnSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnSubscribeRequest.Merge(dst, src)
}
func (m *UnSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_UnSubscribeRequest.Size(m)
}
func (m *UnSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnSubscribeRequest proto.InternalMessageInfo

func (m *UnSubscribeRequest) GetJWTPayload() *JWTPayloadType {
	if m != nil {
		return m.JWTPayload
	}
	return nil
}

type UnSubscribeReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnSubscribeReply) Reset()         { *m = UnSubscribeReply{} }
func (m *UnSubscribeReply) String() string { return proto.CompactTextString(m) }
func (*UnSubscribeReply) ProtoMessage()    {}
func (*UnSubscribeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_authsvc_5610852fecaeeaaa, []int{12}
}
func (m *UnSubscribeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnSubscribeReply.Unmarshal(m, b)
}
func (m *UnSubscribeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnSubscribeReply.Marshal(b, m, deterministic)
}
func (dst *UnSubscribeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnSubscribeReply.Merge(dst, src)
}
func (m *UnSubscribeReply) XXX_Size() int {
	return xxx_messageInfo_UnSubscribeReply.Size(m)
}
func (m *UnSubscribeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UnSubscribeReply.DiscardUnknown(m)
}

var xxx_messageInfo_UnSubscribeReply proto.InternalMessageInfo

func (m *UnSubscribeReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "pb.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "pb.LoginReply")
	proto.RegisterType((*NewUserRequest)(nil), "pb.NewUserRequest")
	proto.RegisterType((*NewUserReply)(nil), "pb.NewUserReply")
	proto.RegisterType((*DecryptRequest)(nil), "pb.DecryptRequest")
	proto.RegisterType((*DecryptReply)(nil), "pb.DecryptReply")
	proto.RegisterType((*ValidateRequest)(nil), "pb.ValidateRequest")
	proto.RegisterType((*ValidateReply)(nil), "pb.ValidateReply")
	proto.RegisterType((*JWTPayloadType)(nil), "pb.JWTPayloadType")
	proto.RegisterType((*SubscribeRequest)(nil), "pb.SubscribeRequest")
	proto.RegisterType((*SubscribeReply)(nil), "pb.SubscribeReply")
	proto.RegisterType((*UnSubscribeRequest)(nil), "pb.UnSubscribeRequest")
	proto.RegisterType((*UnSubscribeReply)(nil), "pb.UnSubscribeReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthsvcClient is the client API for Authsvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthsvcClient interface {
	// Login with some public data.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
	// NewUser a secret message
	NewUser(ctx context.Context, in *NewUserRequest, opts ...grpc.CallOption) (*NewUserReply, error)
	// Decrypt a secret message
	Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptReply, error)
	// Validate a secret message
	Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateReply, error)
	// Subscribe with some public data.
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error)
	// UnSubscribe a secret message
	UnSubscribe(ctx context.Context, in *UnSubscribeRequest, opts ...grpc.CallOption) (*UnSubscribeReply, error)
}

type authsvcClient struct {
	cc *grpc.ClientConn
}

func NewAuthsvcClient(cc *grpc.ClientConn) AuthsvcClient {
	return &authsvcClient{cc}
}

func (c *authsvcClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := c.cc.Invoke(ctx, "/pb.authsvc/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authsvcClient) NewUser(ctx context.Context, in *NewUserRequest, opts ...grpc.CallOption) (*NewUserReply, error) {
	out := new(NewUserReply)
	err := c.cc.Invoke(ctx, "/pb.authsvc/NewUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authsvcClient) Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptReply, error) {
	out := new(DecryptReply)
	err := c.cc.Invoke(ctx, "/pb.authsvc/Decrypt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authsvcClient) Validate(ctx context.Context, in *ValidateRequest, opts ...grpc.CallOption) (*ValidateReply, error) {
	out := new(ValidateReply)
	err := c.cc.Invoke(ctx, "/pb.authsvc/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authsvcClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeReply, error) {
	out := new(SubscribeReply)
	err := c.cc.Invoke(ctx, "/pb.authsvc/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authsvcClient) UnSubscribe(ctx context.Context, in *UnSubscribeRequest, opts ...grpc.CallOption) (*UnSubscribeReply, error) {
	out := new(UnSubscribeReply)
	err := c.cc.Invoke(ctx, "/pb.authsvc/UnSubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthsvcServer is the server API for Authsvc service.
type AuthsvcServer interface {
	// Login with some public data.
	Login(context.Context, *LoginRequest) (*LoginReply, error)
	// NewUser a secret message
	NewUser(context.Context, *NewUserRequest) (*NewUserReply, error)
	// Decrypt a secret message
	Decrypt(context.Context, *DecryptRequest) (*DecryptReply, error)
	// Validate a secret message
	Validate(context.Context, *ValidateRequest) (*ValidateReply, error)
	// Subscribe with some public data.
	Subscribe(context.Context, *SubscribeRequest) (*SubscribeReply, error)
	// UnSubscribe a secret message
	UnSubscribe(context.Context, *UnSubscribeRequest) (*UnSubscribeReply, error)
}

func RegisterAuthsvcServer(s *grpc.Server, srv AuthsvcServer) {
	s.RegisterService(&_Authsvc_serviceDesc, srv)
}

func _Authsvc_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthsvcServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authsvc/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthsvcServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authsvc_NewUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthsvcServer).NewUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authsvc/NewUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthsvcServer).NewUser(ctx, req.(*NewUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authsvc_Decrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthsvcServer).Decrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authsvc/Decrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthsvcServer).Decrypt(ctx, req.(*DecryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authsvc_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthsvcServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authsvc/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthsvcServer).Validate(ctx, req.(*ValidateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authsvc_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthsvcServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authsvc/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthsvcServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authsvc_UnSubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnSubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthsvcServer).UnSubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.authsvc/UnSubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthsvcServer).UnSubscribe(ctx, req.(*UnSubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authsvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.authsvc",
	HandlerType: (*AuthsvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Authsvc_Login_Handler,
		},
		{
			MethodName: "NewUser",
			Handler:    _Authsvc_NewUser_Handler,
		},
		{
			MethodName: "Decrypt",
			Handler:    _Authsvc_Decrypt_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _Authsvc_Validate_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _Authsvc_Subscribe_Handler,
		},
		{
			MethodName: "UnSubscribe",
			Handler:    _Authsvc_UnSubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authsvc.proto",
}

func init() { proto.RegisterFile("authsvc.proto", fileDescriptor_authsvc_5610852fecaeeaaa) }

var fileDescriptor_authsvc_5610852fecaeeaaa = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x6b, 0xd4, 0x40,
	0x14, 0xed, 0x66, 0xbb, 0xe9, 0xf6, 0x76, 0x1b, 0xe3, 0x35, 0x2c, 0x25, 0x4f, 0x32, 0xf8, 0xb0,
	0x22, 0x2c, 0x18, 0x0b, 0xf5, 0xc5, 0x07, 0xa1, 0x88, 0x8a, 0x88, 0xc4, 0x56, 0x5f, 0xfa, 0x92,
	0x64, 0x07, 0xbb, 0x1a, 0x93, 0x71, 0x66, 0xd2, 0x92, 0xbf, 0xe8, 0xaf, 0x92, 0xf9, 0xc8, 0x34,
	0xd9, 0x5d, 0xb0, 0xd0, 0xb7, 0x39, 0x77, 0xee, 0x39, 0xe7, 0x66, 0xe6, 0x4c, 0xe0, 0x38, 0x6b,
	0xe4, 0xb5, 0xb8, 0x29, 0x96, 0x8c, 0xd7, 0xb2, 0x46, 0x8f, 0xe5, 0xe4, 0x1d, 0xcc, 0x3e, 0xd5,
	0x3f, 0xd6, 0x55, 0x4a, 0xff, 0x34, 0x54, 0x48, 0x8c, 0x61, 0xda, 0x08, 0xca, 0xab, 0xec, 0x37,
	0x3d, 0x19, 0x3d, 0x1d, 0x2d, 0x0e, 0x53, 0x87, 0xd5, 0x1e, 0xcb, 0x84, 0xb8, 0xad, 0xf9, 0xea,
	0xc4, 0x33, 0x7b, 0x1d, 0x26, 0x09, 0x80, 0xd5, 0x61, 0x65, 0x8b, 0x21, 0x8c, 0x29, 0xe7, 0x56,
	0x40, 0x2d, 0x11, 0x61, 0xff, 0x6d, 0x23, 0xaf, 0x2d, 0x6f, 0x5f, 0x0d, 0x42, 0xae, 0x20, 0xf8,
	0x4c, 0x6f, 0x2f, 0x05, 0xe5, 0x0f, 0x74, 0x57, 0xea, 0x9a, 0x33, 0x36, 0xea, 0x6a, 0x4d, 0x4e,
	0x61, 0xe6, 0xd4, 0xef, 0x3f, 0xd3, 0x02, 0x82, 0x73, 0x5a, 0xf0, 0x96, 0xc9, 0x6e, 0xa6, 0x39,
	0xf8, 0x1a, 0xd7, 0x96, 0x6a, 0x11, 0x79, 0x0d, 0x33, 0xd7, 0xa9, 0xf4, 0xe7, 0xe0, 0x0b, 0x5a,
	0x70, 0x2a, 0xbb, 0x3e, 0x83, 0x3a, 0x5f, 0xcf, 0xf9, 0x92, 0xe7, 0xf0, 0xe8, 0x5b, 0x56, 0xae,
	0x57, 0x99, 0xa4, 0xff, 0x33, 0x39, 0x83, 0xe3, 0xbb, 0x56, 0xe5, 0x12, 0xc1, 0xe4, 0x46, 0x15,
	0x74, 0xdf, 0x34, 0x35, 0x60, 0x87, 0xc7, 0x02, 0x82, 0x8f, 0xdf, 0x2f, 0xbe, 0x64, 0x6d, 0x59,
	0x67, 0xab, 0x8b, 0x96, 0x51, 0x65, 0xa1, 0x0e, 0xe3, 0xc3, 0xb9, 0xa6, 0x8e, 0x53, 0xbf, 0xd1,
	0x88, 0x5c, 0x41, 0xf8, 0xb5, 0xc9, 0x45, 0xc1, 0xd7, 0xb9, 0x1b, 0x27, 0x82, 0x89, 0xac, 0x7f,
	0xd1, 0xca, 0x4e, 0x63, 0x00, 0x26, 0x00, 0x77, 0x9a, 0xda, 0xec, 0x28, 0xc1, 0x25, 0xcb, 0x97,
	0x43, 0xa7, 0x14, 0x7e, 0x3a, 0x4c, 0x08, 0x04, 0x3d, 0xf5, 0x9d, 0xf7, 0x40, 0xde, 0x03, 0x5e,
	0x56, 0x5b, 0x33, 0x0c, 0xdd, 0x46, 0xf7, 0x72, 0x7b, 0x06, 0xe1, 0x40, 0x69, 0xa7, 0x5f, 0xf2,
	0xd7, 0x83, 0x03, 0xfb, 0x12, 0xf0, 0x05, 0x4c, 0x74, 0x6e, 0x31, 0x54, 0xd2, 0xfd, 0xa7, 0x10,
	0x07, 0xbd, 0x0a, 0x2b, 0x5b, 0xb2, 0x87, 0x2f, 0xe1, 0xc0, 0x46, 0x0a, 0xf5, 0x24, 0xc3, 0xf4,
	0xc6, 0xe1, 0xa0, 0xe6, 0x28, 0x36, 0x25, 0x86, 0x32, 0x0c, 0x97, 0xa1, 0xf4, 0x63, 0x44, 0xf6,
	0xf0, 0x14, 0xa6, 0xdd, 0x9d, 0xe3, 0x13, 0xb5, 0xbf, 0x11, 0x96, 0xf8, 0xf1, 0xb0, 0x68, 0x58,
	0x67, 0x70, 0xe8, 0x3e, 0x1c, 0x23, 0xd5, 0xb1, 0x79, 0xa2, 0x31, 0x6e, 0x54, 0x0d, 0xf1, 0x0d,
	0x1c, 0xf5, 0xce, 0x0c, 0xe7, 0xaa, 0x69, 0xfb, 0x3a, 0xe2, 0x68, 0xab, 0xae, 0xe9, 0xb9, 0xaf,
	0xff, 0x25, 0xaf, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x71, 0x54, 0xa3, 0xff, 0x5c, 0x04, 0x00,
	0x00,
}
